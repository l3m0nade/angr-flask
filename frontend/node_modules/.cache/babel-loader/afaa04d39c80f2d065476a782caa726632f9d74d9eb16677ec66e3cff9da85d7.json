{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'BinaryUpload',\n  data() {\n    return {\n      selectedFile: null,\n      loading: false\n    };\n  },\n  computed: {\n    valid() {\n      return !!this.selectedFile;\n    },\n    fileRules() {\n      return [value => {\n        if (!value) {\n          return 'File is required';\n        }\n        return true;\n      }];\n    }\n  },\n  methods: {\n    // 上传文件方法\n    uploadFile() {\n      console.log(this.fileInfo, '文件信息');\n      if (this.$refs.uploadFileForm.validate()) {\n        this.loading.uploadIsLoading = true;\n        var formData = new window.FormData();\n        formData.append('file', this.fileInfo);\n        collectorImport(formData).then(res => {\n          this.loading.uploadIsLoading = false;\n          this.$refs.notify.show(\"文件上传成功\", {\n            timeout: 1000,\n            color: 'success'\n          });\n          this.uploadDialog = false;\n          this.search();\n        }).catch(err => {\n          this.loading.uploadIsLoading = false;\n        });\n      }\n    },\n    //collectorImport 是封装的ajax方法，不管用什么ajax请求方法，主要是设置请求头'Content-Type': 'multipart/form-data'\n    collectorImport(data) {\n      return request({\n        url: 'http://127.0.0.1:5000/upload_file',\n        method: 'post',\n        data,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    onSubmit() {\n      const formData = new FormData();\n      formData.append('binary', this.selectedFile);\n      console.log(formData);\n      this.loading = true;\n      axios.post('http://127.0.0.1:5000/upload_file', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.error(error);\n      }).finally(() => {\n        this.loading = false;\n        this.$refs.form.reset();\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","selectedFile","loading","computed","valid","fileRules","value","methods","uploadFile","console","log","fileInfo","$refs","uploadFileForm","validate","uploadIsLoading","formData","window","FormData","append","collectorImport","then","res","notify","show","timeout","color","uploadDialog","search","catch","err","request","url","method","headers","response","error","onSubmit","post","finally","form","reset"],"sources":["src/components/BinaryUpload.vue"],"sourcesContent":["<template>\n    <v-container fluid>\n      <v-form @submit.prevent=\"onSubmit\" ref=\"form\">\n        <v-file-input\n          v-model=\"selectedFile\"\n          label=\"Select file\"\n          \n          :rules=\"fileRules\"\n          outlined\n          required\n        ></v-file-input>\n        <v-btn\n          type=\"submit\"\n          color=\"primary\"\n          :loading=\"loading\"\n          :disabled=\"!valid\"\n        >\n          Upload\n        </v-btn>\n      </v-form>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios'\n  \n  export default {\n    name: 'BinaryUpload',\n    data () {\n      return {\n        selectedFile: null,\n        loading: false\n      }\n    },\n    computed: {\n      valid () {\n        return !!this.selectedFile\n      },\n      fileRules () {\n        return [\n          value => {\n            if (!value) {\n              return 'File is required'\n            } \n            return true\n          }\n        ]\n      }\n    },\n    methods: {\n    \n      // 上传文件方法\n        uploadFile() {\n            console.log(this.fileInfo, '文件信息');\n            if (this.$refs.uploadFileForm.validate()) {\n                this.loading.uploadIsLoading = true;\n            var formData = new window.FormData();\n            formData.append('file', this.fileInfo);\n            collectorImport(formData).then(res => {\n            this.loading.uploadIsLoading = false;\n            this.$refs.notify.show(\"文件上传成功\", {timeout: 1000, color: 'success'});\n            this.uploadDialog = false;\n            this.search();\n            }).catch(err => {\n            this.loading.uploadIsLoading = false;\n            });\n        }\n        },\n        //collectorImport 是封装的ajax方法，不管用什么ajax请求方法，主要是设置请求头'Content-Type': 'multipart/form-data'\n        collectorImport(data){\n        return request({\n            url:'http://127.0.0.1:5000/upload_file',\n            method:'post',\n            data,\n            headers: {\n            'Content-Type': 'multipart/form-data'\n            }\n        }).then(response => {\n          console.log(response.data)\n        }).catch(error => {\n          console.error(error)\n        })\n        },\n\n\n      onSubmit () {\n        const formData = new FormData()\n        formData.append('binary', this.selectedFile)\n        console.log(formData)\n        this.loading = true\n        axios.post('http://127.0.0.1:5000/upload_file', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(response => {\n          console.log(response.data)\n        }).catch(error => {\n          console.error(error)\n        }).finally(() => {\n          this.loading = false\n          this.$refs.form.reset()\n        })\n      }\n    }\n  }\n</script>  "],"mappings":"AAwBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,MAAA;MACA,cAAAH,YAAA;IACA;IACAI,UAAA;MACA,QACAC,KAAA;QACA,KAAAA,KAAA;UACA;QACA;QACA;MACA,EACA;IACA;EACA;EACAC,OAAA;IAEA;IACAC,WAAA;MACAC,OAAA,CAAAC,GAAA,MAAAC,QAAA;MACA,SAAAC,KAAA,CAAAC,cAAA,CAAAC,QAAA;QACA,KAAAZ,OAAA,CAAAa,eAAA;QACA,IAAAC,QAAA,OAAAC,MAAA,CAAAC,QAAA;QACAF,QAAA,CAAAG,MAAA,cAAAR,QAAA;QACAS,eAAA,CAAAJ,QAAA,EAAAK,IAAA,CAAAC,GAAA;UACA,KAAApB,OAAA,CAAAa,eAAA;UACA,KAAAH,KAAA,CAAAW,MAAA,CAAAC,IAAA;YAAAC,OAAA;YAAAC,KAAA;UAAA;UACA,KAAAC,YAAA;UACA,KAAAC,MAAA;QACA,GAAAC,KAAA,CAAAC,GAAA;UACA,KAAA5B,OAAA,CAAAa,eAAA;QACA;MACA;IACA;IACA;IACAK,gBAAApB,IAAA;MACA,OAAA+B,OAAA;QACAC,GAAA;QACAC,MAAA;QACAjC,IAAA;QACAkC,OAAA;UACA;QACA;MACA,GAAAb,IAAA,CAAAc,QAAA;QACA1B,OAAA,CAAAC,GAAA,CAAAyB,QAAA,CAAAnC,IAAA;MACA,GAAA6B,KAAA,CAAAO,KAAA;QACA3B,OAAA,CAAA2B,KAAA,CAAAA,KAAA;MACA;IACA;IAGAC,SAAA;MACA,MAAArB,QAAA,OAAAE,QAAA;MACAF,QAAA,CAAAG,MAAA,gBAAAlB,YAAA;MACAQ,OAAA,CAAAC,GAAA,CAAAM,QAAA;MACA,KAAAd,OAAA;MACAJ,KAAA,CAAAwC,IAAA,sCAAAtB,QAAA;QACAkB,OAAA;UACA;QACA;MACA,GAAAb,IAAA,CAAAc,QAAA;QACA1B,OAAA,CAAAC,GAAA,CAAAyB,QAAA,CAAAnC,IAAA;MACA,GAAA6B,KAAA,CAAAO,KAAA;QACA3B,OAAA,CAAA2B,KAAA,CAAAA,KAAA;MACA,GAAAG,OAAA;QACA,KAAArC,OAAA;QACA,KAAAU,KAAA,CAAA4B,IAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}